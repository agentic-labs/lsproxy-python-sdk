name: Publish Python Package
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'  # Matches PEP 440 versions like 0.1.0a1
  workflow_dispatch:
  

jobs:
  pypi-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install toml parser
        run: pip install toml

      - name: Verify tag matches pyproject.toml version
        id: verify_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          TOML_VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          echo "Checking tag version ($VERSION) against pyproject.toml version ($TOML_VERSION)"
          if [ "$VERSION" != "$TOML_VERSION" ]; then
            echo "Error: Git tag ($VERSION) does not match version in pyproject.toml ($TOML_VERSION)"
            exit 1
          fi
          echo "VERSION=$TOML_VERSION" >> $GITHUB_OUTPUT

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check distribution
        run: twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.LSPROXY_PYPI_TOKEN }}
        run: twine upload dist/*
